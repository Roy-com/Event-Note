{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","App.js","reportWebVitals.js","index.js"],"names":["Note","id","year","title","text","date","time","duration","datex","month","handleDeleteNote","className","src","process","alt","onClick","size","AddNote","handleAddNote","useState","noteText","setNoteText","noteTitle","setNoteTitle","noteYear","setNoteYear","noteDuration","setNoteDuration","noteDatex","setNoteDatex","noteMonth","setNoteMonth","characterLimit","rows","cols","placeholder","value","onChange","event","target","length","trim","NotesList","notes","map","note","App","nanoid","setNotes","today","Date","Currentdate","getDate","getMonth","getFullYear","Currenttime","getHours","getMinutes","getSeconds","newNote","newNotes","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2beced39.chunk.js","sourcesContent":["import { MdDeleteForever } from \"react-icons/md\";\r\nimport \"./Note.css\";\r\nconst Note = ({\r\n  id,\r\n  year,\r\n  title,\r\n  text,\r\n  date,\r\n  time,\r\n  duration,\r\n  datex,\r\n  month,\r\n  handleDeleteNote,\r\n}) => {\r\n  return (\r\n    <div className=\"Home_note_container\">\r\n      {/* <span>{text}</span> */}\r\n      {/* <div className=\"note-footer\">\r\n        <small>{date}</small>\r\n        <MdDeleteForever\r\n          onClick={() => handleDeleteNote(id)}\r\n          className=\"delete-icon\"\r\n          size=\"1.3em\"\r\n        />\r\n      </div> */}\r\n      <div className=\"HomeCalender\">\r\n        <div className=\"Homeevent-container\">\r\n          <h3 className=\"Home-year\">{year}</h3>\r\n\r\n          <div className=\"Home-event\">\r\n            <div className=\"Home_event-left\">\r\n              <div className=\"Home_event-date\">\r\n                <div className=\"date\">{datex}</div>\r\n                <div className=\"month\">{month}</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"Home_event-right\">\r\n              <h3 className=\"Home-event-title\">{title}</h3>\r\n\r\n              <div className=\"Home-event-description\">{text}</div>\r\n\r\n              <div className=\"Home-event-timing\">\r\n                <img src={process.env.PUBLIC_URL + \"/image/time.png\"} alt=\"\" />{\" \"}\r\n                {duration}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"Home-footer-event\">\r\n          <small>Updated Date: {date}</small>{\" \"}\r\n          <small>Updated Time: {time}</small>\r\n          <div>\r\n            <small>\r\n              {\" \"}\r\n              <MdDeleteForever\r\n                onClick={() => handleDeleteNote(id)}\r\n                className=\"delete-icon HomeDeleteButton \"\r\n                size=\"1.3em\"\r\n                title=\"Delete this event\"\r\n              />\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import { useState } from \"react\";\r\n\r\nconst AddNote = ({ handleAddNote }) => {\r\n  const [noteText, setNoteText] = useState(\"\");\r\n  const [noteTitle, setNoteTitle] = useState(\"\");\r\n  const [noteYear, setNoteYear] = useState(\"\");\r\n  const [noteDuration, setNoteDuration] = useState(\"\");\r\n  const [noteDatex, setNoteDatex] = useState(\"\");\r\n  const [noteMonth, setNoteMonth] = useState(\"\");\r\n  const characterLimit = 200;\r\n\r\n  const handleChangetext = (event) => {\r\n    if (characterLimit - event.target.value.length >= 0) {\r\n      setNoteText(event.target.value);\r\n    }\r\n  };\r\n  const handleChangetitle = (event) => {\r\n    if (characterLimit - event.target.value.length >= 0) {\r\n      setNoteTitle(event.target.value);\r\n    }\r\n  };\r\n  const handleChangeyear = (event) => {\r\n    if (characterLimit - event.target.value.length >= 0) {\r\n      setNoteYear(event.target.value);\r\n    }\r\n  };\r\n  const handleChangeduration = (event) => {\r\n    if (characterLimit - event.target.value.length >= 0) {\r\n      setNoteDuration(event.target.value);\r\n    }\r\n  };\r\n  const handleChangedatex = (event) => {\r\n    if (characterLimit - event.target.value.length >= 0) {\r\n      setNoteDatex(event.target.value);\r\n    }\r\n  };\r\n  const handleChangemonth = (event) => {\r\n    if (characterLimit - event.target.value.length >= 0) {\r\n      setNoteMonth(event.target.value);\r\n    }\r\n  };\r\n  const handleSaveClick = () => {\r\n    if (noteText.trim().length > 0) {\r\n      handleAddNote(\r\n        noteText,\r\n        noteTitle,\r\n        noteYear,\r\n        noteDuration,\r\n        noteDatex,\r\n        noteMonth\r\n      );\r\n\r\n      setNoteText(\"\");\r\n      setNoteTitle(\"\");\r\n      setNoteYear(\"\");\r\n      setNoteDuration(\"\");\r\n      setNoteDatex(\"\");\r\n      setNoteMonth(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"HomeCalender\">\r\n      <h4 className=\"heading_edit_event\">\r\n        Please enter the following information for the future event: \"Year,\r\n        Month, Date, Time, Title, Description\" in the text area below:\r\n      </h4>\r\n      <div className=\"Homeevent-container\">\r\n        <h3 className=\"Home-year\">\r\n          {\" \"}\r\n          <textarea\r\n            rows=\"1\"\r\n            cols=\"30\"\r\n            placeholder=\"Type to add Year\"\r\n            value={noteYear}\r\n            onChange={handleChangeyear}\r\n          ></textarea>\r\n        </h3>\r\n        <div className=\"Home-event\">\r\n          <div className=\"Home_event-left\">\r\n            <div className=\"Home_event-date\">\r\n              <div className=\"date\">\r\n                {\" \"}\r\n                <textarea\r\n                  rows=\"1\"\r\n                  cols=\"10\"\r\n                  placeholder=\"Date\"\r\n                  value={noteDatex}\r\n                  onChange={handleChangedatex}\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"month\">\r\n                {\" \"}\r\n                <textarea\r\n                  rows=\"1\"\r\n                  cols=\"10\"\r\n                  placeholder=\"Month\"\r\n                  value={noteMonth}\r\n                  onChange={handleChangemonth}\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Home_event-right\">\r\n            <h3 className=\"Home-event-title\">\r\n              {\" \"}\r\n              <textarea\r\n                rows=\"1\"\r\n                cols=\"22\"\r\n                placeholder=\"Type to add title\"\r\n                value={noteTitle}\r\n                onChange={handleChangetitle}\r\n              ></textarea>\r\n            </h3>\r\n\r\n            <div className=\"Home-event-description\">\r\n              <textarea\r\n                rows=\"1\"\r\n                cols=\"22\"\r\n                placeholder=\"Type to add a note...\"\r\n                value={noteText}\r\n                onChange={handleChangetext}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"Home-event-timing\">\r\n              <img src={process.env.PUBLIC_URL + \"/image/time.png\"} alt=\"\" />{\" \"}\r\n              <textarea\r\n                rows=\"1\"\r\n                cols=\"30\"\r\n                placeholder=\"Time\"\r\n                value={noteDuration}\r\n                onChange={handleChangeduration}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"note-footer\">\r\n          {/* <small>{characterLimit - noteText.length} Remaining</small> */}\r\n          <button className=\"AddEventButton\" onClick={handleSaveClick}>\r\n            Add Event\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNote;\r\n","import Note from \"./Note\";\r\nimport AddNote from \"./AddNote\";\r\n\r\nconst NotesList = ({ notes, handleAddNote, handleDeleteNote }) => {\r\n  return (\r\n    <div className=\"notes-list\">\r\n      {notes.map((note) => (\r\n        <Note\r\n          id={note.id}\r\n          year={note.year}\r\n          title={note.title}\r\n          text={note.text}\r\n          date={note.date}\r\n          time={note.time}\r\n          duration={note.duration}\r\n          datex={note.datex}\r\n          month={note.month}\r\n          handleDeleteNote={handleDeleteNote}\r\n        />\r\n      ))}\r\n      <AddNote handleAddNote={handleAddNote} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesList;\r\n","import { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport NotesList from \"./components/NotesList\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([\n    {\n      id: nanoid(),\n      year: \"2020\",\n      title: \"Chritsmas\",\n      text: \"Join the Christmas Meeting\",\n      date: \"11/12/2021\",\n      time: \"10:47\",\n      duration: \"10:00 AM\",\n      datex: \"25\",\n      month: \"Dec\",\n    },\n    {\n      id: nanoid(),\n      year: \"2021\",\n      title: \"New Year\",\n      text: \"Join the New Year Meeting\",\n      date: \"11/12/2021\",\n      time: \"14:50\",\n      duration: \"3:05 PM\",\n      datex: \"01\",\n      month: \"Jan\",\n    },\n  ]);\n\n  // const [searchText, setSearchText] = useState(\"\");\n\n  const addNote = (text, title, year, duration, datex, month) => {\n    const today = new Date();\n    const Currentdate =\n      today.getDate() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getFullYear();\n    const Currenttime =\n      today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    // const dateTime = date + \"      \" + time;\n    const newNote = {\n      id: nanoid(),\n      year: year,\n      title: title,\n      text: text,\n      date: Currentdate,\n      time: Currenttime,\n      duration: duration,\n      datex: datex,\n      month: month,\n\n      // date: date.toLocaleDateString(),\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        <h2 className=\"heading_event_note\"> Event-Note</h2>\n        <NotesList\n          // notes={notes.filter((note) =>\n          //   note.text.toLowerCase().includes(searchText)\n          // )}\n          notes={notes}\n          handleAddNote={addNote}\n          handleDeleteNote={deleteNote}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}